#!/bin/bash
# deepdive - Automated Pentest Environment Setup
# Creates organized folder structure for CTF/pentest challenges

echo "DEEPDIVE - Pentest Environment Setup"
echo "===================================="

# Select platform first
echo "[+] Select platform:"
echo "   1) HackTheBox (HTB)"
echo "   2) TryHackMe (THM)" 
echo "   3) VulnHub"
echo "   4) Other"
read -p "[-] Enter choice [1-4]: " platform_choice

case $platform_choice in
    1) platform="HTB" ;;
    2) platform="TryHackMe" ;;
    3) platform="VulnHub" ;;
    4) read -p "[-] Enter custom platform name: " platform ;;
    *) echo "[!] Invalid selection"; exit 1 ;;
esac

# Get challenge name
read -p "[-] Enter challenge name: " challenge_name

if [[ -z "$challenge_name" ]]; then
    echo "[!] Error: Challenge name cannot be empty"
    exit 1
fi

# Create platform directory if it doesn't exist
if [[ ! -d "$platform" ]]; then
    echo "[+] Creating platform directory: $platform/"
    mkdir -p "$platform"
fi

# Navigate to platform directory
cd "$platform"

# Check if challenge already exists
if [[ -d "$challenge_name" ]]; then
    echo "[!] Warning: Challenge '$challenge_name' already exists in $platform/"
    read -p "[-] Overwrite? (y/N): " overwrite
    [[ $overwrite != "y" ]] && exit 0
fi

# Create challenge structure
echo "[+] Creating challenge: $challenge_name/"
mkdir -p "$challenge_name"
cd "$challenge_name"

# Create standard folders
folders=("nmap" "content" "scripts" "exploits" "logs" "screenshots" "evidence")
for folder in "${folders[@]}"; do
    mkdir -p "$folder"
    echo "    Created: $folder/"
done

# Create basic notes file
cat > NOTES.md << EOF
# $challenge_name - $platform

## Target Information
- **IP**: 
- **OS**: 
- **Points**: 
- **Difficulty**: 
- **Date Started**: $(date +%Y-%m-%d)

## Reconnaissance
### Nmap Scans
\`\`\`bash
# Quick TCP scan
nmap -sC -sV -oA nmap/quick-tcp

# Full port scan  
nmap -p- --min-rate 1000 -oA nmap/full-ports

# UDP scan (if needed)
nmap -sU --top-ports 100 -oA nmap/udp-scan
\`\`\`

## Findings
### Open Ports
- 

### Services
- 

## Exploitation
### Initial Access
- 

### Privilege Escalation
- 

## Notes
- 

## Flags
- **User**: 
- **Root**: 

EOF

echo "[+] Created: NOTES.md"

# Create quick access script
cat > start.sh << EOF
#!/bin/bash
# Quick navigation script for $challenge_name

echo "Starting: $challenge_name ($platform)"
echo "Current path: \$(pwd)"
echo ""
echo "Available folders:"
ls -la
echo ""
echo "Quick commands:"
echo "   cd nmap/          - Scan results"
echo "   cd content/       - Downloaded files" 
echo "   cd scripts/       - Custom scripts"
echo "   cd exploits/      - Exploitation tools"
echo "   vim NOTES.md      - Edit notes"
echo ""
echo "Happy hacking!"

EOF

chmod +x start.sh

# Create back script to return to platform root
cat > back.sh << EOF
#!/bin/bash
# Return to platform root
cd ..
echo "Returned to platform directory: \$(pwd)"
ls -la
EOF

chmod +x back.sh

echo ""
echo "Setup completed!"
echo "Location: $(pwd)"
echo "Useful commands:"
echo "   ./start.sh    - Quick navigation"
echo "   ./back.sh     - Return to $platform directory"
echo "Happy hacking!"